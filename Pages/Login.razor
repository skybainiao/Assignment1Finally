@page "/login"
@namespace LoginComponent
@using LoginExample.Authentication

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<AuthorizeView>
    <NotAuthorized>
        <div>
            
            <h1 class="Login">Aurora</h1>
            <br>
            <div class="form-group">
                <form>
                    <input style="color: white;background-color: rgba(0,0,0,0.55);border-radius: 30px;width: 250px;height: 30px; text-align: center" type="text" placeholder="user name" @bind-value="username"/>
                    <br>
                    <input style="color:white;background-color: rgba(0,0,0,0.55);border-radius: 30px;width: 250px;height: 30px; text-align: center" type="password" placeholder="password" @bind-value="password"/>
                    <br><br>
                </form>
                <div type="submit" class="oi oi-account-login" @onclick="PerformLogin"></div>
                </div>
            
            <div style="color:red">@errorMessage</div>
            
            
        </div>

    </NotAuthorized>
    
     
   
    
    <Authorized>
        <a href="" @onclick="PerformLogout" style="color: white">
            Log out
        </a>
        @if (true)
                {
                    NavigationManager.NavigateTo("/");
                }
    </Authorized>
</AuthorizeView>

@code {
    private string username;
    private string password;
    private string errorMessage;

    public async Task PerformLogin() {
        errorMessage = "";
        try {
            ((CustomAuthenticationStateProvider) AuthenticationStateProvider).ValidateLogin(username, password);
            username = "";
            password = "";
        } catch (Exception e) {
            errorMessage = e.Message;
        }
    }

    public async Task PerformLogout() {
        errorMessage = "";
        username = "";
        password = "";
        try {
            ((CustomAuthenticationStateProvider) AuthenticationStateProvider).Logout();
            NavigationManager.NavigateTo("/");
        } catch (Exception e) { }
    }

}